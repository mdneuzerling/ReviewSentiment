on:
  pull_request:
    branches:
      - production

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
      - name: Install remotes
        run: |
          install.packages(
            "remotes",
            repos = c("CRAN" = "https://packagemanager.rstudio.com/all/__linux__/bionic/latest")
          )
        shell: Rscript {0}
      - name: Install system dependencies
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
      - name: Install workflow dependencies
        run: |
          install.packages(
            c("renv", "rcmdcheck"),
            repos = c("CRAN" = "https://packagemanager.rstudio.com/all/__linux__/bionic/latest")
          )
        shell: Rscript {0}
      - name: Restore dependencies from renv lockfile
        run: |
          renv::restore(
            repos = c("CRAN" = "https://packagemanager.rstudio.com/all/__linux__/bionic/latest")
          )
        shell: Rscript {0}
      - name: drake-make
        run: |
          rstudio_pm <- c("CRAN" = "https://packagemanager.rstudio.com/all/__linux__/bionic/latest")
          if (!require("drake")) install.packages("drake", repos = rstudio_pm)
          if (!require("knitr")) install.packages("knitr", repos = rstudio_pm)"
          devtools::load_all()
          plan <- training_plan()
          drake::make(plan)
          his <- drake::drake_history()[c("target", "built", "exists", "runtime")]
          his_md <- knitr::kable(his, format = "markdown")
          writeLines(his_md, "his_md.txt")
        shell: Rscript {0}
      - name: Comment drake history on PR
        uses: machine-learning-apps/pr-comment@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: his_md.txt
